#Listas (arreglos o vectores)

lista= ["Lunes", "Martes", "Miercoles", "Jueves", "Viernes"]

print(lista)
 #Si quieremos mostrar solo un elemento de la lista hacemos lo siguiente
print(lista[2])

#Podemos trabajar con sublistas en concreto, imprime los elementos de 0 a 3, llega a una posicion antes

print(lista[0:3])
print(lista[:3]) #apartir de ese indice se imprimen los elementos


#Ejercicio  'len' nos dice la cantidad de elementos alamcenados en la lista
lista1=[1,2,3,4,5]
print(len(lista1))

#si a lo largo del programa quiero agregar mas elementos a la lista, pones la funcion .append, se agregan al final
lista1.append(6)
print(lista1)

#si queremos agregarlo un nuevo elemento un una posicion espefica, hacemos lo siguiente
lista1.insert(2,0) #ponemos dos parametros a lafunción: (indice, elemento)
print(lista1)
 #Ahora queremos agregar varios elementos al final de la lista, concatenamos con la lista inicial
lista1.extend([6,7,8])
print(lista1)

#También podemos sumar listas
lista2=[10,11,12,13,14]
lista3=lista1+lista2
print(lista3)

#Buscar un determinado elemento de la lista
print(4 in lista1) #preguntamos si el elemeno 4 está dentro de la lista

#Damos el valor y nos retorna al indice que esta el valor
print(lista1.index(2))

#Si tenemos valores repetidos, podemos preguntar cuatos elementos iguales hay

lista4 =[1,3.4,4,1,4,1,1,1,0,89,1,1]
print(lista4.count(1))

#si queremos eliminar elemetos de la  lsta utilizamos la funcion 'pop'

lista5=[1,2,3,4,5,"Patricia"]

lista5.pop() #elimina el ultimo elemento de la lista
print(lista5)
#ahora si queremos eliminar un elemento en particular, indicamos el índice
lista5.pop(2)
print(lista5)
#ahora queremos eliminar un elemento, pero no sabemos el ínice, para eso utilizaos la funcion  'remove' y agregamos el elemento
lista6=[1,2,3,4,"patricia", "hola"]
lista6.remove("hola")
print(lista6)

#el reverso de la lista, o que quede volteada la lista
lista7=[1,2,3,4, "hola"]
lista7.reverse()
print(lista7)

#Para poder copear n veces la lista
lista8=[2,4,6,6,8,8]*2
print(lista8)

#Ordenar los elementos de la lista
lista9=[0,5,3,7,1,4,9,12,2,-3]
lista9.sort() #de menor a mayor
print(lista9)
 #de mayor a menor
lista9.sort(reverse=True)
print(lista9)


'''TUPLAS'''
#Las tuplas son listas inmutables, no se pueden modificar
tupla= (1,2,0, "Hola", 0.98,6)
print(tupla[4 ])#podemos mostrar un solo elemento , ponemos el indice

#Con las tuplas podemos 'buscar' , ver si 'x' valor esta en la tupla

print(6 in tupla)
#tambien con 'index', me arroja el indice del elemento
print(tupla.index("Hola"))
print(tupla.count(0.98))

print(len(tupla )) #ver cuantos elementos tiene la tupla


#Se puden transformar tuplas en listas y viceversa
tupla1= (1,2,0, "Hola", 0.98,6)
lista= list(tupla1)
print(tupla1)

#de lista a tupla
lista0=[1,3,5,"hola",0]
tupla=tuple(lista0)

print(lista0)




"CONJUNTOS"
#son grupo un grupo de elementos desordenados, no pude haber duplicados

conjunto=set()

conjunto= {1,3,4,6,7,8, "hola",9.988,1,3}
conjunto.add(200) #agregar más alementos al conjunto
#aparece dos vece el 1, cuando se ejecuta solo aparece una vez
print(conjunto)

#eliminar elementos del conjunto
conjunto3= {1,3,4,6,7,8, "hola",9.988,1,3,0}
conjunto3.discard("hola")
print(conjunto3)

#ver si cierto elemento está dentro del conjunto
conjunto3= {1,3,4,6,7,8, "hola",9.988,1,3,0}
print(0 in conjunto3)
print(0 not in conjunto3)

"Operaciones con conjuntos"
a={1,2,3}
b={2,3,4,}

print(a==b)
print(len(a))#ver cuantos elementos tiene cada conjunto

"Union de conjuntos"
c=a|b
print(c)

"intersección de conjuntos"
c=a &b
print(c)

"Diferencia de conjuntos"
c=a -b
print(c)

"Diferencia simétrica de conjuntos"
c=a ^b
print(c)

#Como saber si un conjunto es subconjunto de otro
d={1,2,3,4,5,6}
print(a.issubset(d))

#Ver si los conjuntos son disjuntos
print(a.isdisjoint(b))

#ver si los conjuntos son inmutables no se le puden agregar valores

a1=frozenset({1,2,3,4,4,5,7})
print(a1)


"DICCIONARIOS"
#Colección donde los elementos se guardan desordenados, tienen dos elementos por poicion, la clave y el valor
diccionario={"azul": "blue","rojo":"red", "verde":"green"}
print(diccionario)

#mostrar uno o algunos elementos del diccionario
print(diccionario["azul"])

#agregar elementos al diccionario
diccionario["amarillo"]= "yellow"
print(diccionario)

#modificar algun elemento
diccionario["azul"]= "BLUE"
print(diccionario)

#eliminar elementos
del(diccionario["verde"])
print(diccionario)


diccionario1={"Alejandro":[22,1.77], "Luis":[34,1.67]}
print(diccionario1)

diccionario1={"Alejandro":{"edad":22,"Estatura": 1.77}}
print(diccionario1)

equipo={10:"Paulo Dybala", 11:"Douglas", 7:"Ronaldo"}
print(equipo)

#ver cual es el valor de la clave
print(equipo[10])
print(equipo.get(13, "no existe un jugador con ese dorsal"))

#buscar si algun elemento está en el conjunto
print(10 in equipo)

#quiero mostrar solo las claves , no el valor
print(equipo.keys())
#quiero mostrar solo los valores , no la clave
print(equipo.values())

print(equipo.items())

#ver cuantos elementos hay en el diccionario
print(len(equipo))


"PILAS"
pila=[1,2,3]
#agregar elementos al final
pila.append(4)
pila.append(5)
print(pila)

#sacar elementos del final, también lo retorna
n= pila.pop()
print(f"Sacando el elemento {n}")
print(pila)
#

"COLAS"
#ESTRUCTURA DE DATOS
cola= ["Maria", "Jose", "Mario", "paty"]
#agregar más elementos al final
cola.append("Flor")
cola.append("Karla")
print(cola)
#Sacar elementos por el principio de la cola
n=cola.pop(0)
print(f"Atendiendo a {n}")
print(cola)

n=cola.pop(0)
print(f"Atendiendo a {n}")
print(cola)

"EJERCICIOS"

#1. Escribrir un programa donde tenga una lista y que, a continuación, elimine los datos repetidos y mostrar la lista

lista0 =[1,1,3,4,5,3,2,9,8,7,55,4,1,1]

conjunto0= set(lista0)
#convertirlo a lista
lista0=list(conjunto0)
print(lista0)

#Otra forma más corta
lista0=list(set(lista0))
print(lista0)


#2. Escribir un programa que tenga dos listas, y que, a continuación, cree las siguientes listas:
#a)lista de elementos que aparecen en las dos listas
#b) lista de elementos que aparecen en la primera lista, pero no en la segunda
#c) lista de elementos que aparecen en la SEGUNDA lista, pero no en la primera
#d) lista de alementos que aparezcan en ambas listas

A=["SOL", "LUNA", "AGUA", "MAR", "CALOR", 3,"LUNA"]
B=[0,1,3,3,4,6,7, "SOL", "LUNA", "MAL"]
CON1=set(A)
CON2=set(B)
"a) lista de elementos que aparecen en las dos listas"
C=CON1|CON2
C=list(C)
print(f"lista de elementos que aparecen en las dos listas:{C}")

"b) lista de elementos que aparecen en la primera lista, pero no en la segunda"
C=CON1-CON2
C=list(C)
print(f"lista de elementos que aparecen en la primera lista, pero no en la segunda:{C}")

"c) lista de elementos que aparecen en la SEGUNDA lista, pero no en la primera"
C=CON2-CON1
C=list(C)
print(f"lista de elementos que aparecen en la SEGUNDA lista, pero no en la primera:{C}")

"d) lista de alementos que aparezcan en ambas listas"
C=CON1&CON2
C=list(C)
print(f"lista de alementos que aparezcan en ambas listas:{C}")

#3. Escribir un programa donde cree una lista con los siguientes personajes del señor de los anillos:

personajes=[]

diccionario0={"Nombre":"Aragon","Clase":"Guerrero","Raza":"Dúnadan del Norte"}
personajes.append(diccionario0)
diccionario0={ "Nombre":"Gandalf","Clase":"Mago","Raza":"Istar"}
personajes.append(diccionario0)
diccionario0={"Nombre":"Legolas","Clase":"Arquero","Raza":"Elfo sindar"}
personajes.append(diccionario0)
print(personajes)
